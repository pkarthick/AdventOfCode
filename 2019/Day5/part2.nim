import strutils
import sequtils

let input="3,225,1,225,6,6,1100,1,238,225,104,0,1101,40,27,224,101,-67,224,224,4,224,1002,223,8,223,1001,224,2,224,1,224,223,223,1101,33,38,225,1102,84,60,225,1101,65,62,225,1002,36,13,224,1001,224,-494,224,4,224,1002,223,8,223,1001,224,3,224,1,223,224,223,1102,86,5,224,101,-430,224,224,4,224,1002,223,8,223,101,6,224,224,1,223,224,223,1102,23,50,225,1001,44,10,224,101,-72,224,224,4,224,102,8,223,223,101,1,224,224,1,224,223,223,102,47,217,224,1001,224,-2303,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1102,71,84,225,101,91,40,224,1001,224,-151,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,1101,87,91,225,1102,71,19,225,1,92,140,224,101,-134,224,224,4,224,1002,223,8,223,101,1,224,224,1,224,223,223,2,170,165,224,1001,224,-1653,224,4,224,1002,223,8,223,101,5,224,224,1,223,224,223,1101,49,32,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1107,226,677,224,1002,223,2,223,1006,224,329,101,1,223,223,8,226,226,224,1002,223,2,223,1005,224,344,101,1,223,223,1007,677,226,224,102,2,223,223,1005,224,359,101,1,223,223,8,226,677,224,102,2,223,223,1005,224,374,101,1,223,223,1107,677,677,224,1002,223,2,223,1005,224,389,1001,223,1,223,108,226,677,224,102,2,223,223,1005,224,404,1001,223,1,223,108,677,677,224,1002,223,2,223,1006,224,419,101,1,223,223,107,677,677,224,102,2,223,223,1006,224,434,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,449,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,224,464,101,1,223,223,1108,226,677,224,1002,223,2,223,1006,224,479,1001,223,1,223,1108,677,677,224,1002,223,2,223,1005,224,494,101,1,223,223,7,677,677,224,1002,223,2,223,1005,224,509,101,1,223,223,1007,677,677,224,1002,223,2,223,1005,224,524,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,539,101,1,223,223,1107,677,226,224,102,2,223,223,1006,224,554,101,1,223,223,107,226,677,224,1002,223,2,223,1005,224,569,101,1,223,223,107,226,226,224,1002,223,2,223,1005,224,584,101,1,223,223,1108,677,226,224,102,2,223,223,1006,224,599,1001,223,1,223,1008,677,677,224,102,2,223,223,1006,224,614,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,629,101,1,223,223,1008,226,677,224,1002,223,2,223,1006,224,644,101,1,223,223,1007,226,226,224,1002,223,2,223,1005,224,659,1001,223,1,223,1008,226,226,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226"
# let input="3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99"

var state = input.split({','}).map(parseInt)

proc evalProgram(state: var seq[int]) =

    var i = 0

    while state[i] != 99:

        let 
            loc1 = state[i+1]
            loc2 = state[i+2]
            opcode = state[i] %% 100
            c = (state[i] div 100) %% 10
            b = (state[i] div 1000) %% 10
            # a = (state[i] div 10000) %% 10

        var
            op1 = loc1
            op2 = loc2
           

        # echo ""        
        # echo "ins:", state[i]
        # echo "opcode:", opcode
        # echo "b=", b, " c=", c
        # echo "instruction=", state[i..i+3]

        if state[i] > 10000:
            echo "Unexpected instruction!"
            quit 1

        case opcode
        of 1:
            if c == 0:
                op1 = state[loc1]
            if b == 0:
                op2 = state[loc2]

            state[state[i+3]] = op1 + op2 #add
            i += 4

        of 2:
            if c == 0:
                op1 = state[loc1]
            if b == 0:
                op2 = state[loc2]

            state[state[i+3]] = op1 * op2 #multiplication
            i += 4
        of 3:
            echo "Please input:"
            state[loc1] = stdin.readLine.parseInt
            i += 2

        of 4:
            if c == 0:
                echo state[loc1]
            else:
                echo loc1

            i += 2

        of 5:
            if c == 0:
                op1 = state[loc1]
            if b == 0:
                op2 = state[loc2]

            if op1 != 0:
                i = op2
            else:
                i += 3

        of 6:
            if c == 0:
                op1 = state[loc1]
            if b == 0:
                op2 = state[loc2]

            if op1 == 0:
                i = op2
            else:
                i += 3

        of 7:
            if c == 0:
                op1 = state[loc1]
            if b == 0:
                op2 = state[loc2]

            if op1 < op2:
                state[state[i+3]] = 1
            else:
                state[state[i+3]] = 0

            i += 4
                
        of 8:
            if c == 0:
                op1 = state[loc1]
            if b == 0:
                op2 = state[loc2]

            if op1 == op2:
                state[state[i+3]] = 1
            else:
                state[state[i+3]] = 0

            i += 4

        of 99:
            break
        else:
            echo "Something is quite not right! Opcode is", state[i]
            break

evalProgram(state)